{
    "version": "https://jsonfeed.org/version/1",
    "title": "思维之苑",
    "subtitle": "",
    "icon": "https://xkdd3000.github.io/assets/favicon.ico",
    "description": "“思维之苑”是一个种植思想、不断成长的园地，承载着探索、反思和创造的过程。",
    "home_page_url": "https://xkdd3000.github.io",
    "items": [
        {
            "id": "https://xkdd3000.github.io/2022/07/01/blog-setup/Hexo%20%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/",
            "url": "https://xkdd3000.github.io/2022/07/01/blog-setup/Hexo%20%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/",
            "title": "用Hexo从零开始搭建个人博客",
            "date_published": "2022-06-30T16:00:00.000Z",
            "content_html": "<p><strong>摘要：一篇基于Github Pages和Hexo搭建自己的个人博客的教程，里面介绍了如何使用和配置Hexo框架，如何将Hexo部署到自己的Github项目中，如何注册域名以及将自己的域名关联到Github Pages上，并实现https协议。</strong></p>\n<hr>\n<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>一直想搭建一个属于自己的博客，一方面可以记录自己的学习成果和技术理解，一方面在面试中也是加分项。在此记录下首次搭建个人博客的踩坑之路。</p>\n<h2 id=\"一、技术选型\"><a href=\"#一、技术选型\" class=\"headerlink\" title=\"一、技术选型\"></a>一、技术选型</h2><h3 id=\"1-为什么选择HEXO？\"><a href=\"#1-为什么选择HEXO？\" class=\"headerlink\" title=\"1.为什么选择HEXO？\"></a>1.为什么选择<a href=\"https://so.csdn.net/so/search?q=HEXO&spm=1001.2101.3001.7020\">HEXO</a>？</h3><p>博客生成技术分为静态和动态网站生成，考虑到静态相比动态生成，有如下优点：</p>\n<blockquote>\n<ul>\n<li>内容存储为平面文件，因此不需要数据库</li>\n<li>静态网站不需要动态服务器端处理</li>\n<li>静态网站比动态网站超快，因为它们不需要服务器端处理或数据库访问</li>\n<li>静态网站比任何动态网站都更安全，因为可以利用的安全漏洞更少</li>\n<li>缓存静态文件比缓存动态页面更有效</li>\n</ul>\n</blockquote>\n<p>所以本次使用静态生成，目前主流静态站点生成器有：Hexo和Hugo等，Hugo是一个用Go语言构建的静态站点生成器，其搭建较简单但可扩展性差。而Hexo是基于Node的开源静态生成器，有以下优点：</p>\n<blockquote>\n<ul>\n<li>构建速度快</li>\n<li>使用一个部署命令可部署到Github或其他任何主机</li>\n<li>强大的Markdown支持</li>\n<li>高度可扩展</li>\n<li>丰富的开源主题与插件</li>\n</ul>\n</blockquote>\n<p>基于此，本次采用Hexo进行博客搭建。</p>\n<h3 id=\"2-为什么选择Github-Pages\"><a href=\"#2-为什么选择Github-Pages\" class=\"headerlink\" title=\"2.为什么选择Github Pages\"></a>2.为什么选择Github Pages</h3><p>Github Pages是用户编写的、托管在github上的静态网页,优点有：</p>\n<blockquote>\n<ul>\n<li>可以绑定你的域名</li>\n<li>简单快捷，可以提供一个免费的服务器，免去了自己搭建服务器和写数据库的麻烦。</li>\n</ul>\n</blockquote>\n<h2 id=\"二、搭建步骤\"><a href=\"#二、搭建步骤\" class=\"headerlink\" title=\"二、搭建步骤\"></a>二、搭建步骤</h2><h3 id=\"1-安装和配置必要框架\"><a href=\"#1-安装和配置必要框架\" class=\"headerlink\" title=\"1.安装和配置必要框架\"></a>1.安装和配置必要框架</h3><h4 id=\"Git安装\"><a href=\"#Git安装\" class=\"headerlink\" title=\"Git安装\"></a>Git安装</h4><blockquote>\n<p>去<a href=\"https://git-scm.com/download/win\">Git官网</a>根据你的电脑参数，下载对应版本并安装。<br>安装完成后在桌面或任意文件夹点击鼠标右键，会有<code>Git GUI Here</code>和<code>Git Bash Here</code>两个按钮，一个是图形界面的Git操作，一个是命令行。<br>一般选择命令行操作<code>Git Bash Here</code>。</p>\n</blockquote>\n<p><img loading=\"lazy\" data-src=\"/./Hexo%20%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA.assets/e8329372a4674c6c0ea9a5a112f6a987.png\" alt=\"Alt\"></p>\n<h4 id=\"Node-js安装\"><a href=\"#Node-js安装\" class=\"headerlink\" title=\"Node.js安装\"></a>Node.js安装</h4><blockquote>\n<p>到<a href=\"https://nodejs.org/en/download/\">官网</a>根据电脑参数下载安装文件并执行，无脑点下一步即可，无需配置环境变量，完成安装。</p>\n</blockquote>\n<h4 id=\"Hexo安装与配置\"><a href=\"#Hexo安装与配置\" class=\"headerlink\" title=\"Hexo安装与配置\"></a>Hexo安装与配置</h4><blockquote>\n<p>桌面右键鼠标，点击<code>Git Bash Here</code>，输入以下命令即可安装。</p>\n</blockquote>\n<pre><code>npm install hexo-cli -g   \nnpm install hexo-deployer-git --save\n</code></pre>\n<blockquote>\n<p>第一句是安装hexo，第二句是安装hexo部署到git page的deployer，两个都需要安装。如下图即安装完成。</p>\n</blockquote>\n<p><img loading=\"lazy\" data-src=\"/./Hexo%20%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA.assets/124ce1d63d9f212f85dcf51d56049f9c.png\" alt=\"在这里插入图片描述\"></p>\n<blockquote>\n<p>安装完成后，根据自己喜好创建一个Hexo文件夹(如D:\\Blog\\Hexo),进入创建的文件夹目录，右键鼠标，点击<code>Git Bash Here</code>，执行命令:</p>\n</blockquote>\n<pre><code>hexo init     \n</code></pre>\n<p>Hexo 将在指定文件夹中新建所需要的初始化配置文件，如下图<br><img loading=\"lazy\" data-src=\"/./Hexo%20%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA.assets/dccf5a61df37a8373ff8a92551c70f70.png\" alt=\"在这里插入图片描述\"></p>\n<pre><code>hexo clean   #清理缓存\nhexo generate #进行渲染 简写为 hexo g\nhexo server   #部署到本地(调试使用) 简写为 hexo s\n</code></pre>\n<p>终端中会出现<code>INFO Hexo is running at http://localhost:4000/</code>。<br>此时在浏览器输入网址<a href=\"http://localhost:4000/\">http://localhost:4000</a>，即可查看本地的效果，如下图<br><img loading=\"lazy\" data-src=\"/./Hexo%20%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA.assets/70272872d8dd045a8701a02459a40274.png\" alt=\"在这里插入图片描述\"><br>此时个人博客初步创建成功，但这是本地调试用的，其他人看不到(调试完毕后记得在git命令行中Ctrl+C来停止运行，不然下次就进不去了)，所以接下来我们需要把它部署到服务器上，从而让每个人都能通过互联网访问到我们的个人博客。<br><img loading=\"lazy\" data-src=\"/./Hexo%20%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA.assets/3e174c036c8143246023ecd038cf31d2.png\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"2-将博客部署到Github-Pages上\"><a href=\"#2-将博客部署到Github-Pages上\" class=\"headerlink\" title=\"2.将博客部署到Github Pages上\"></a>2.将博客部署到Github Pages上</h3><h4 id=\"在Github中创建github-io项目代码库\"><a href=\"#在Github中创建github-io项目代码库\" class=\"headerlink\" title=\"在Github中创建github.io项目代码库\"></a>在Github中创建github.io项目代码库</h4><p>注意repository的名字必须是：你的用户名.github.io</p>\n<h4 id=\"将本地的Hexo文件更新到Github的库中\"><a href=\"#将本地的Hexo文件更新到Github的库中\" class=\"headerlink\" title=\"将本地的Hexo文件更新到Github的库中\"></a>将本地的Hexo文件更新到Github的库中</h4><blockquote>\n<p>打开创建的Hexo文件夹，修改配置文件_config.yml<br>以后的大部分操作都会在_config.yml中进行，它是站点的配置文件。<br>在Hexo文件夹下,右键鼠标，点击<code>Git Bash Here</code>,执行命令：</p>\n</blockquote>\n<pre><code>hexo clean    #清理缓存\nhexo generate   #进行渲染 简写为 hexo g\nhexo server #部署到本地 简写为 hexo s 可省略\nhexo deploy #部署到git服务器  简写为 hexo d\n</code></pre>\n<p>以上代码为了简单后续统称为“更新代码”，即每次在本地进行了操作（如修改了配置、新写或修改了博客文章等),都需执行“更新代码”来同步到git服务器，从而让别人浏览到。其中<code>hexo s</code>命令也可省略，即如果没有本地调试需求，可以直接commit到git服务器。</p>\n<blockquote>\n<p>如报错<code>ERROR Deployer not found: git</code>,deployer没有安装成功，需要执行如下命令再安装一次：</p>\n</blockquote>\n<pre><code>npm install hexo-deployer-git --save\n</code></pre>\n<p>再执行<code>hexo g -d</code>，出现<code>INFO Deploy done: git</code>即部署成功，在浏览器上输入Github Pager为我们生成的外链：你的用户名.github.io（如<a href=\"https://zhangsx19.github.io/\">zhangsx19.github.io</a>），即可看到自己的博客，且每个人都可通过此地址访问到。</p>\n<h2 id=\"三、写第一个博客\"><a href=\"#三、写第一个博客\" class=\"headerlink\" title=\"三、写第一个博客\"></a>三、写第一个博客</h2><p>搭好博客后，进入创建的Hexo文件夹，使用如下命令来新建文章：</p>\n<pre><code>hexo new post “文章名字” #简写为 hexo n &quot;文章名字&quot;\n</code></pre>\n<p>建立好的文章存储在.&#x2F;source&#x2F;_posts 中，你可以在本地用markdown语法编辑内容。编辑完成后还需要执行“更新代码”</p>\n<pre><code>hexo clean\nhexo g\nhexo d   #可与hexo g合并为 hexo d -g\n</code></pre>\n<p>再刷新浏览器就可看到新文章。如下图:<br><img loading=\"lazy\" data-src=\"/./Hexo%20%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA.assets/fcc23c4673890f1bd8a87cd5cc15f76f.png\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"四、将域名关联到Github-Pages-可选）\"><a href=\"#四、将域名关联到Github-Pages-可选）\" class=\"headerlink\" title=\"四、将域名关联到Github Pages(可选）\"></a>四、将域名关联到Github Pages(可选）</h2><h3 id=\"1-域名购买\"><a href=\"#1-域名购买\" class=\"headerlink\" title=\"1.域名购买\"></a>1.域名购买</h3><p>如果不想用github提供的免费域名，可以选择在<a href=\"https://wanwang.aliyun.com/domain/?spm=5176.383338.1907008.1.LWIFhw\">阿里云</a>上买一个属于自己的域名，然后将自己域名绑定到自己的Github Pages博客上</p>\n<h3 id=\"2-域名解析\"><a href=\"#2-域名解析\" class=\"headerlink\" title=\"2.域名解析\"></a>2.域名解析</h3><blockquote>\n<p>购买域名并实名认证后，需要把域名解析到我们的博客中，在阿里云的域名控制台找到域名右侧对应的解析按钮。点击添加解析，然后按照如下填写添加解析，记得把记录值替换成你自己的博客地址。</p>\n</blockquote>\n<p><img loading=\"lazy\" data-src=\"/./Hexo%20%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA.assets/61c7fff220a800aa84e3494fc7a3889c.png\" alt=\"在这里插入图片描述\"><br><img loading=\"lazy\" data-src=\"/./Hexo%20%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA.assets/fcde7dc643e38c7f4343d2d26a9ac15b.png\" alt=\"在这里插入图片描述\"><br>之后记得启用该记录。</p>\n<h3 id=\"3-博客配置\"><a href=\"#3-博客配置\" class=\"headerlink\" title=\"3.博客配置\"></a>3.博客配置</h3><p>购买域名后，在Hexo\\source 文件夹下创建文件 CNAME （通过记事本创建和打开，没有后缀名），内容为你的域名，如<a href=\"http://sx-zhang.top/\">sx-zhang.top</a>。<br><img loading=\"lazy\" data-src=\"/./Hexo%20%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA.assets/fa5956ae29d2510e65f549851b8f12f2.png\" alt=\"在这里插入图片描述\"></p>\n<p>然后在Hexo文件夹执行“更新代码”。</p>\n<pre><code>hexo clean\nhexo g -d\n</code></pre>\n<p>就可以通过购买的域名访问博客了。如果不能访问可能是因为运营商DNS缓存问题。等几分钟就可以。</p>\n<h2 id=\"五、实现https协议-可选）\"><a href=\"#五、实现https协议-可选）\" class=\"headerlink\" title=\"五、实现https协议(可选）\"></a>五、实现https协议(可选）</h2><p>购买的域名是http协议，如果用google浏览器或者Safari，会提示网站不被信任，只有你点击仍要继续才会展示你的博客。而使用https协议就不会有这个问题，有以下方法：</p>\n<blockquote>\n<ol>\n<li>购买证书</li>\n<li>使用免费CA证书。腾讯云阿里云都有提供。不过有时间限制</li>\n<li>使用CDN进行反向代理</li>\n</ol>\n</blockquote>\n<p>因为我们使用的github Page是不支持上传证书的，所以此次使用第三种:通过CDN配置反向代理。</p>\n<h3 id=\"原理\"><a href=\"#原理\" class=\"headerlink\" title=\"原理\"></a>原理</h3><blockquote>\n<p><a href=\"https://www.cloudflare.com/zh-cn/\">Cloudflare</a> 提供DNS解析服务，而且速度很快。它提供了免费的https服务(但不是应用SSL证书)。实现模式是，用户到CDN服务器的连接为https，而CDN服务器到GithubPage服务器的连接为http，即在CDN服务器那里加上反向代理。</p>\n</blockquote>\n<h3 id=\"步骤\"><a href=\"#步骤\" class=\"headerlink\" title=\"步骤\"></a>步骤</h3><blockquote>\n<p>去官网注册后添加购买的域名，进入DNS解析界面填入如下解析：</p>\n</blockquote>\n<p><img loading=\"lazy\" data-src=\"/./Hexo%20%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA.assets/7aeeb52b431017bdc361c75909327eb3.png\" alt=\"在这里插入图片描述\"></p>\n<blockquote>\n<p>其中前两个是使你的域名指向github的服务器地址(github文档中给的)，最后CNAME记录指向的是github仓库域名username.github.io。一定要严格按照这个来配置。<br>记录下cloudflare给你的DNS解析服务器，就在上一步那个页面下边，用这个记录去把阿里云的DNS解析服务器替换掉，同时删掉阿里云里面的DNS解析记录，因为只靠clouleflare来解析DNS。</p>\n</blockquote>\n<p><img loading=\"lazy\" data-src=\"/./Hexo%20%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA.assets/be46c0958cd877f2f3a3311e42f222ed.png\" alt=\"在这里插入图片描述\"></p>\n<blockquote>\n<p>回到clouldflare上面选择SSL&#x2F;TLS的Overview选项，然后选择Full或者是Flexible。再在Edge Certificates里打开always use HTTPS开关。<br>此时即可用https访问个人博客啦！</p>\n</blockquote>\n<p><img loading=\"lazy\" data-src=\"/./Hexo%20%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA.assets/0a2bf7abc52d363405085daaa1e97cd8.png\" alt=\"在这里插入图片描述\"></p>\n<blockquote>\n<p>坑：博文不能有非https的链接，比如图片图床不能是https的，或者评论插件不支持https等</p>\n</blockquote>\n<hr>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>本文简单介绍了如何用Hexo框架从零开始搭建属于自己的个人博客，以及如何把购买的域名关联到Github Pages,并利用CDN配置反向代理实现https协议。<br>搭建完博客后，接下来就是要个性化个人博客和写博客了。</p>\n<p>想了解更多，欢迎来参观我的博客：<a href=\"https://sx-zhang.top/\">Zhangsx’s Blog</a> 和github：<a href=\"https://github.com/zhangsx19?tab=repositories\">zhangsx19</a></p>\n<hr>\n<h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2><ol>\n<li><p><a href=\"https://juejin.cn/post/6844903720296120328\">hexo搭建博客以及域名解析分析</a></p>\n</li>\n<li><p><a href=\"https://juejin.cn/post/6844903549646667789\">2018，你该搭建自己的博客了！</a></p>\n</li>\n<li><p><a href=\"https://juejin.cn/post/6844903557070602254#heading-6\">关于HEXO搭建个人博客的点点滴滴</a></p>\n</li>\n</ol>\n",
            "tags": [
                "博客构筑",
                "博客设置"
            ]
        },
        {
            "id": "https://xkdd3000.github.io/2022/07/01/financial-freedom/Hexo%20%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/",
            "url": "https://xkdd3000.github.io/2022/07/01/financial-freedom/Hexo%20%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/",
            "title": "Hexo 环境搭建",
            "date_published": "2022-06-30T16:00:00.000Z",
            "content_html": "<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>一直想搭建一个属于自己的博客，一方面可以记录自己的学习成果和技术理解，一方面在面试中也是加分项。在此记录下首次搭建个人博客的踩坑之路。</p>\n",
            "tags": [
                "财务自由之路",
                "搭建博客"
            ]
        },
        {
            "id": "https://xkdd3000.github.io/2022/07/01/hacker/Hexo%20%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/",
            "url": "https://xkdd3000.github.io/2022/07/01/hacker/Hexo%20%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/",
            "title": "Hexo 环境搭建",
            "date_published": "2022-06-30T16:00:00.000Z",
            "content_html": "<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>一直想搭建一个属于自己的博客，一方面可以记录自己的学习成果和技术理解，一方面在面试中也是加分项。在此记录下首次搭建个人博客的踩坑之路。</p>\n",
            "tags": [
                "网络安全",
                "搭建博客"
            ]
        },
        {
            "id": "https://xkdd3000.github.io/2022/07/01/cognition-logging/Hexo%20%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/",
            "url": "https://xkdd3000.github.io/2022/07/01/cognition-logging/Hexo%20%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/",
            "title": "Hexo 环境搭建",
            "date_published": "2022-06-30T16:00:00.000Z",
            "content_html": "<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>一直想搭建一个属于自己的博客，一方面可以记录自己的学习成果和技术理解，一方面在面试中也是加分项。在此记录下首次搭建个人博客的踩坑之路。</p>\n",
            "tags": [
                "认知日志",
                "搭建博客"
            ]
        }
    ]
}